// This file is auto-generated by @hey-api/openapi-ts

export type Candidate = {
    candidate_first_name: string;
    candidate_last_name: string;
    candidate_desc: string;
    linkedin: string;
    resume: string;
    email: string;
    phone_number: string;
    github: string;
    github_rating?: ({
    [key: string]: unknown;
} | null);
    portfolio?: (string | null);
    portfolio_rating?: ({
    [key: string]: unknown;
} | null);
    grad_year?: (string | null);
    grad_month?: (string | null);
    created_at: string;
    updated_at: string;
    generated_desc: string;
};

export type CandidateCreate = {
    candidate_first_name: string;
    candidate_last_name: string;
    candidate_desc: string;
    linkedin: string;
    resume: string;
    email: string;
    phone_number: string;
    github: string;
    github_rating?: ({
    [key: string]: unknown;
} | null);
    portfolio?: (string | null);
    portfolio_rating?: ({
    [key: string]: unknown;
} | null);
    grad_year?: (string | null);
    grad_month?: (string | null);
    created_at?: string;
    updated_at?: string;
    generated_desc?: string;
};

export type CandidateRole = {
    candidate_id: string;
    candidate_role_status?: (CandidateRoleStatus);
    candidate_role_notes?: (Array<CandidateRoleNote> | null);
    criteria_scores?: (Array<CriteriaScoringItem> | null);
    candidate_role_generated_description?: (string | null);
    created_at: string;
    updated_at: string;
    readonly candidate: (Candidate | null);
};

export type CandidateRoleCreate = {
    candidate_id: string;
    candidate_role_status?: (CandidateRoleStatus);
    candidate_role_notes?: (Array<CandidateRoleNote> | null);
    criteria_scores?: (Array<CriteriaScoringItem> | null);
    candidate_role_generated_description?: (string | null);
    created_at?: string;
    updated_at?: string;
};

export type CandidateRoleNote = {
    type: CandidateRoleNoteType;
    notes: string;
    created_at?: string;
};

export type CandidateRoleNoteType = 'Takehome Assignment' | 'Email' | 'Phone Screen' | 'Other';

export const CandidateRoleNoteType = {
    TAKEHOME_ASSIGNMENT: 'Takehome Assignment',
    EMAIL: 'Email',
    PHONE_SCREEN: 'Phone Screen',
    OTHER: 'Other'
} as const;

export type CandidateRoleStatus = 'Outreach' | 'Screening' | 'Sent' | 'Interview' | 'Offer' | 'Hired' | 'Rejected';

export const CandidateRoleStatus = {
    OUTREACH: 'Outreach',
    SCREENING: 'Screening',
    SENT: 'Sent',
    INTERVIEW: 'Interview',
    OFFER: 'Offer',
    HIRED: 'Hired',
    REJECTED: 'Rejected'
} as const;

export type CandidateRoleUpdate = {
    candidate_id: string;
    candidate_role_status?: (CandidateRoleStatus);
    candidate_role_notes?: (Array<CandidateRoleNote> | null);
    criteria_scores?: (Array<CriteriaScoringItem> | null);
    candidate_role_generated_description?: (string | null);
    updated_at?: string;
};

export type CandidateUpdate = {
    candidate_first_name: string;
    candidate_last_name: string;
    candidate_desc: string;
    linkedin: string;
    resume: string;
    email: string;
    phone_number: string;
    github: string;
    github_rating?: ({
    [key: string]: unknown;
} | null);
    portfolio?: (string | null);
    portfolio_rating?: ({
    [key: string]: unknown;
} | null);
    grad_year?: (string | null);
    grad_month?: (string | null);
    updated_at?: string;
};

export type CandidateWithId = {
    candidate_first_name: string;
    candidate_last_name: string;
    candidate_desc: string;
    linkedin: string;
    resume: string;
    email: string;
    phone_number: string;
    github: string;
    github_rating?: ({
    [key: string]: unknown;
} | null);
    portfolio?: (string | null);
    portfolio_rating?: ({
    [key: string]: unknown;
} | null);
    grad_year?: (string | null);
    grad_month?: (string | null);
    created_at: string;
    updated_at: string;
    generated_desc: string;
    candidate_id: string;
};

export type Company = {
    status?: (CompanyStatus);
    company_name: string;
    company_desc: string;
    founders: Array<CompanyFounder>;
    contract_size?: (string | null);
    created_at: string;
    updated_at: string;
};

export type CompanyCreate = {
    status?: (CompanyStatus);
    company_name: string;
    company_desc: string;
    founders: Array<CompanyFounder>;
    contract_size?: (string | null);
    created_at?: string;
    updated_at?: string;
};

export type CompanyFounder = {
    founder_name: string;
    founder_role: string;
    founder_email: string;
    founder_phone: string;
    founder_linkedin_url: string;
};

export type CompanyStatus = 'Active' | 'Inactive' | 'Pending';

export const CompanyStatus = {
    ACTIVE: 'Active',
    INACTIVE: 'Inactive',
    PENDING: 'Pending'
} as const;

export type CompanyUpdate = {
    status?: (CompanyStatus);
    company_name: string;
    company_desc: string;
    founders: Array<CompanyFounder>;
    contract_size?: (string | null);
    updated_at?: string;
};

export type CompanyWithId = {
    status?: (CompanyStatus);
    company_name: string;
    company_desc: string;
    founders: Array<CompanyFounder>;
    contract_size?: (string | null);
    created_at: string;
    updated_at: string;
    company_id: string;
    roles_count?: (number | null);
};

export type CriteriaScoringItem = {
    criteria_name: string;
    score: number;
};

export type FindCandidatesBody = {
    n: number;
    grad_years?: (Array<(string)> | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type Role = {
    role_name: string;
    role_desc: string;
    role_requirements?: (string | null);
    role_status?: (RoleStatus);
    role_criteria?: Array<RoleCriteria>;
    created_at: string;
    updated_at: string;
};

export type RoleCreate = {
    role_name: string;
    role_desc: string;
    role_requirements?: (string | null);
    role_status?: (RoleStatus);
    role_criteria?: Array<RoleCriteria>;
    created_at?: string;
    updated_at?: string;
    is_open?: boolean;
};

export type RoleCriteria = {
    criteria_name: string;
};

export type RoleStatus = 'Open' | 'In Review' | 'Closed Filled' | 'Closed Unfilled' | 'Closed Cancelled';

export const RoleStatus = {
    OPEN: 'Open',
    IN_REVIEW: 'In Review',
    CLOSED_FILLED: 'Closed Filled',
    CLOSED_UNFILLED: 'Closed Unfilled',
    CLOSED_CANCELLED: 'Closed Cancelled'
} as const;

export type RoleUpdate = {
    role_name: string;
    role_desc: string;
    role_requirements?: (string | null);
    role_status?: (RoleStatus);
    role_criteria?: Array<RoleCriteria>;
    updated_at?: string;
};

export type RoleWithId = {
    role_name: string;
    role_desc: string;
    role_requirements?: (string | null);
    role_status?: (RoleStatus);
    role_criteria?: Array<RoleCriteria>;
    created_at: string;
    updated_at: string;
    role_id: string;
    candidates_interview_count: number;
    candidates_sent_count: number;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type HealthcheckHealthcheckGetResponse = ({
    [key: string]: unknown;
});

export type HealthcheckHealthcheckGetError = unknown;

export type ListCompaniesEndpointCompaniesGetResponse = (Array<CompanyWithId>);

export type ListCompaniesEndpointCompaniesGetError = unknown;

export type CreateCompanyEndpointCompaniesPostData = {
    body: CompanyCreate;
};

export type CreateCompanyEndpointCompaniesPostResponse = (string);

export type CreateCompanyEndpointCompaniesPostError = (HTTPValidationError);

export type GetCompanyEndpointCompaniesCompanyIdGetData = {
    path: {
        company_id: string;
    };
};

export type GetCompanyEndpointCompaniesCompanyIdGetResponse = ((Company | null));

export type GetCompanyEndpointCompaniesCompanyIdGetError = (HTTPValidationError);

export type UpdateCompanyEndpointCompaniesCompanyIdPutData = {
    body: CompanyUpdate;
    path: {
        company_id: string;
    };
};

export type UpdateCompanyEndpointCompaniesCompanyIdPutResponse = (Company);

export type UpdateCompanyEndpointCompaniesCompanyIdPutError = (HTTPValidationError);

export type DeleteCompanyEndpointCompaniesCompanyIdDeleteData = {
    path: {
        company_id: string;
    };
};

export type DeleteCompanyEndpointCompaniesCompanyIdDeleteResponse = (Company);

export type DeleteCompanyEndpointCompaniesCompanyIdDeleteError = (HTTPValidationError);

export type CreateRoleEndpointCompaniesCompanyIdRolesPostData = {
    body: RoleCreate;
    path: {
        company_id: string;
    };
};

export type CreateRoleEndpointCompaniesCompanyIdRolesPostResponse = (string);

export type CreateRoleEndpointCompaniesCompanyIdRolesPostError = (HTTPValidationError);

export type ListRolesEndpointCompaniesCompanyIdRolesGetData = {
    path: {
        company_id: string;
    };
};

export type ListRolesEndpointCompaniesCompanyIdRolesGetResponse = (Array<RoleWithId>);

export type ListRolesEndpointCompaniesCompanyIdRolesGetError = (HTTPValidationError);

export type GetRoleEndpointCompaniesCompanyIdRolesRoleIdGetData = {
    path: {
        company_id: string;
        role_id: string;
    };
};

export type GetRoleEndpointCompaniesCompanyIdRolesRoleIdGetResponse = ((Role | null));

export type GetRoleEndpointCompaniesCompanyIdRolesRoleIdGetError = (HTTPValidationError);

export type UpdateRoleEndpointCompaniesCompanyIdRolesRoleIdPutData = {
    body: RoleUpdate;
    path: {
        company_id: string;
        role_id: string;
    };
};

export type UpdateRoleEndpointCompaniesCompanyIdRolesRoleIdPutResponse = ((Role | null));

export type UpdateRoleEndpointCompaniesCompanyIdRolesRoleIdPutError = (HTTPValidationError);

export type DeleteRoleEndpointCompaniesCompanyIdRolesRoleIdDeleteData = {
    path: {
        company_id: string;
        role_id: string;
    };
};

export type DeleteRoleEndpointCompaniesCompanyIdRolesRoleIdDeleteResponse = (Role);

export type DeleteRoleEndpointCompaniesCompanyIdRolesRoleIdDeleteError = (HTTPValidationError);

export type GenerateCriteriaEndpointCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostData = {
    path: {
        company_id: string;
        role_id: string;
    };
};

export type GenerateCriteriaEndpointCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostResponse = (Array<RoleCriteria>);

export type GenerateCriteriaEndpointCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostError = (HTTPValidationError);

export type CreateCandidateEndpointCandidatesPostData = {
    body: CandidateCreate;
};

export type CreateCandidateEndpointCandidatesPostResponse = (string);

export type CreateCandidateEndpointCandidatesPostError = (HTTPValidationError);

export type ListCandidatesEndpointCandidatesGetData = {
    query?: {
        cursor?: (string | null);
        limit?: number;
    };
};

export type ListCandidatesEndpointCandidatesGetResponse = ([
    Array<CandidateWithId>,
    (string | null)
]);

export type ListCandidatesEndpointCandidatesGetError = (HTTPValidationError);

export type GetCandidateEndpointCandidatesCandidateIdGetData = {
    path: {
        candidate_id: string;
    };
};

export type GetCandidateEndpointCandidatesCandidateIdGetResponse = ((Candidate | null));

export type GetCandidateEndpointCandidatesCandidateIdGetError = (HTTPValidationError);

export type UpdateCandidateEndpointCandidatesCandidateIdPutData = {
    body: CandidateUpdate;
    path: {
        candidate_id: string;
    };
};

export type UpdateCandidateEndpointCandidatesCandidateIdPutResponse = (Candidate);

export type UpdateCandidateEndpointCandidatesCandidateIdPutError = (HTTPValidationError);

export type DeleteCandidateEndpointCandidatesCandidateIdDeleteData = {
    path: {
        candidate_id: string;
    };
};

export type DeleteCandidateEndpointCandidatesCandidateIdDeleteResponse = (Candidate);

export type DeleteCandidateEndpointCandidatesCandidateIdDeleteError = (HTTPValidationError);

export type RateCandidateGithubEndpointCandidatesCandidateIdGithubGetData = {
    path: {
        candidate_id: string;
    };
};

export type RateCandidateGithubEndpointCandidatesCandidateIdGithubGetResponse = (Candidate);

export type RateCandidateGithubEndpointCandidatesCandidateIdGithubGetError = (HTTPValidationError);

export type RateCandidatePortfolioEndpointCandidatesCandidateIdPortfolioGetData = {
    path: {
        candidate_id: string;
    };
};

export type RateCandidatePortfolioEndpointCandidatesCandidateIdPortfolioGetResponse = (Candidate);

export type RateCandidatePortfolioEndpointCandidatesCandidateIdPortfolioGetError = (HTTPValidationError);

export type CreateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCreatePostData = {
    body: CandidateCreate;
    path: {
        company_id: string;
        role_id: string;
    };
};

export type CreateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCreatePostResponse = (CandidateRole);

export type CreateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCreatePostError = (HTTPValidationError);

export type AddCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesPostData = {
    body: CandidateRoleCreate;
    path: {
        company_id: string;
        role_id: string;
    };
};

export type AddCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesPostResponse = ((CandidateRole | null));

export type AddCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesPostError = (HTTPValidationError);

export type ListCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesGetData = {
    path: {
        company_id: string;
        role_id: string;
    };
    query?: {
        cursor?: (string | null);
        limit?: number;
    };
};

export type ListCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesGetResponse = ([
    Array<CandidateRole>,
    (string | null)
]);

export type ListCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesGetError = (HTTPValidationError);

export type GetCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetData = {
    path: {
        candidate_id: string;
        company_id: string;
        role_id: string;
    };
};

export type GetCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetResponse = ((CandidateRole | null));

export type GetCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetError = (HTTPValidationError);

export type UpdateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutData = {
    body: CandidateRoleUpdate;
    path: {
        candidate_id: string;
        company_id: string;
        role_id: string;
    };
};

export type UpdateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutResponse = ((CandidateRole | null));

export type UpdateCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutError = (HTTPValidationError);

export type DeleteCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteData = {
    path: {
        candidate_id: string;
        company_id: string;
        role_id: string;
    };
};

export type DeleteCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteResponse = (CandidateRole);

export type DeleteCandidateEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteError = (HTTPValidationError);

export type FindCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesFindPostData = {
    body: FindCandidatesBody;
    path: {
        company_id: string;
        role_id: string;
    };
};

export type FindCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesFindPostResponse = ((Array<CandidateRole> | null));

export type FindCandidatesEndpointCompaniesCompanyIdRolesRoleIdCandidatesFindPostError = (HTTPValidationError);

export type GenerateCandidateRoleDescriptionEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostData = {
    path: {
        candidate_id: string;
        company_id: string;
        role_id: string;
    };
};

export type GenerateCandidateRoleDescriptionEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostResponse = ((string | null));

export type GenerateCandidateRoleDescriptionEndpointCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostError = (HTTPValidationError);