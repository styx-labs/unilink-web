// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { HealthcheckHealthcheckGetResponse, ListCompaniesCompaniesGetResponse, CreateCompanyCompaniesPostData, CreateCompanyCompaniesPostResponse, GetCompanyCompaniesCompanyIdGetData, GetCompanyCompaniesCompanyIdGetResponse, UpdateCompanyCompaniesCompanyIdPutData, UpdateCompanyCompaniesCompanyIdPutResponse, DeleteCompanyCompaniesCompanyIdDeleteData, DeleteCompanyCompaniesCompanyIdDeleteResponse, CreateRoleCompaniesCompanyIdRolesPostData, CreateRoleCompaniesCompanyIdRolesPostResponse, ListRolesCompaniesCompanyIdRolesGetData, ListRolesCompaniesCompanyIdRolesGetResponse, GetRoleCompaniesCompanyIdRolesRoleIdGetData, GetRoleCompaniesCompanyIdRolesRoleIdGetResponse, UpdateRoleCompaniesCompanyIdRolesRoleIdPutData, UpdateRoleCompaniesCompanyIdRolesRoleIdPutResponse, DeleteRoleCompaniesCompanyIdRolesRoleIdDeleteData, DeleteRoleCompaniesCompanyIdRolesRoleIdDeleteResponse, GenerateCriteriaCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostData, GenerateCriteriaCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostResponse, CreateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCreatePostData, CreateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCreatePostResponse, AddCandidateCompaniesCompanyIdRolesRoleIdCandidatesPostData, AddCandidateCompaniesCompanyIdRolesRoleIdCandidatesPostResponse, ListCandidatesCompaniesCompanyIdRolesRoleIdCandidatesGetData, ListCandidatesCompaniesCompanyIdRolesRoleIdCandidatesGetResponse, UpdateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutData, UpdateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutResponse, GetCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetData, GetCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetResponse, DeleteCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteData, DeleteCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteResponse, GenerateCandidateRoleDescriptionCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostData, GenerateCandidateRoleDescriptionCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostResponse, ListCandidatesCandidatesGetResponse, CreateCandidateCandidatesPostData, CreateCandidateCandidatesPostResponse, GetCandidateCandidatesCandidateIdGetData, GetCandidateCandidatesCandidateIdGetResponse, UpdateCandidateCandidatesCandidateIdPutData, UpdateCandidateCandidatesCandidateIdPutResponse, DeleteCandidateCandidatesCandidateIdDeleteData, DeleteCandidateCandidatesCandidateIdDeleteResponse } from './types.gen';

/**
 * Healthcheck
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const healthcheckHealthcheckGet = (): CancelablePromise<HealthcheckHealthcheckGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/healthcheck'
}); };

/**
 * List Companies
 * @returns CompanyWithId Successful Response
 * @throws ApiError
 */
export const listCompaniesCompaniesGet = (): CancelablePromise<ListCompaniesCompaniesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies'
}); };

/**
 * Create Company
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const createCompanyCompaniesPost = (data: CreateCompanyCompaniesPostData): CancelablePromise<CreateCompanyCompaniesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get Company
 * @param data The data for the request.
 * @param data.companyId
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getCompanyCompaniesCompanyIdGet = (data: GetCompanyCompaniesCompanyIdGetData): CancelablePromise<GetCompanyCompaniesCompanyIdGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies/{company_id}',
    path: {
        company_id: data.companyId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Update Company
 * @param data The data for the request.
 * @param data.companyId
 * @param data.requestBody
 * @returns Company Successful Response
 * @throws ApiError
 */
export const updateCompanyCompaniesCompanyIdPut = (data: UpdateCompanyCompaniesCompanyIdPutData): CancelablePromise<UpdateCompanyCompaniesCompanyIdPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/companies/{company_id}',
    path: {
        company_id: data.companyId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Company
 * @param data The data for the request.
 * @param data.companyId
 * @returns Company Successful Response
 * @throws ApiError
 */
export const deleteCompanyCompaniesCompanyIdDelete = (data: DeleteCompanyCompaniesCompanyIdDeleteData): CancelablePromise<DeleteCompanyCompaniesCompanyIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/companies/{company_id}',
    path: {
        company_id: data.companyId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Create Role
 * @param data The data for the request.
 * @param data.companyId
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const createRoleCompaniesCompanyIdRolesPost = (data: CreateRoleCompaniesCompanyIdRolesPostData): CancelablePromise<CreateRoleCompaniesCompanyIdRolesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies/{company_id}/roles',
    path: {
        company_id: data.companyId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * List Roles
 * @param data The data for the request.
 * @param data.companyId
 * @returns RoleWithId Successful Response
 * @throws ApiError
 */
export const listRolesCompaniesCompanyIdRolesGet = (data: ListRolesCompaniesCompanyIdRolesGetData): CancelablePromise<ListRolesCompaniesCompanyIdRolesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies/{company_id}/roles',
    path: {
        company_id: data.companyId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get Role
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getRoleCompaniesCompanyIdRolesRoleIdGet = (data: GetRoleCompaniesCompanyIdRolesRoleIdGetData): CancelablePromise<GetRoleCompaniesCompanyIdRolesRoleIdGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies/{company_id}/roles/{role_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Update Role
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const updateRoleCompaniesCompanyIdRolesRoleIdPut = (data: UpdateRoleCompaniesCompanyIdRolesRoleIdPutData): CancelablePromise<UpdateRoleCompaniesCompanyIdRolesRoleIdPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/companies/{company_id}/roles/{role_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Role
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @returns Role Successful Response
 * @throws ApiError
 */
export const deleteRoleCompaniesCompanyIdRolesRoleIdDelete = (data: DeleteRoleCompaniesCompanyIdRolesRoleIdDeleteData): CancelablePromise<DeleteRoleCompaniesCompanyIdRolesRoleIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/companies/{company_id}/roles/{role_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Generate Criteria
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @returns RoleCriteria Successful Response
 * @throws ApiError
 */
export const generateCriteriaCompaniesCompanyIdRolesRoleIdGenerateCriteriaPost = (data: GenerateCriteriaCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostData): CancelablePromise<GenerateCriteriaCompaniesCompanyIdRolesRoleIdGenerateCriteriaPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies/{company_id}/roles/{role_id}/generate_criteria',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Create Candidate
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.requestBody
 * @returns CandidateRole Successful Response
 * @throws ApiError
 */
export const createCandidateCompaniesCompanyIdRolesRoleIdCandidatesCreatePost = (data: CreateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCreatePostData): CancelablePromise<CreateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCreatePostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies/{company_id}/roles/{role_id}/candidates/create',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Add Candidate
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const addCandidateCompaniesCompanyIdRolesRoleIdCandidatesPost = (data: AddCandidateCompaniesCompanyIdRolesRoleIdCandidatesPostData): CancelablePromise<AddCandidateCompaniesCompanyIdRolesRoleIdCandidatesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies/{company_id}/roles/{role_id}/candidates',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * List Candidates
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @returns CandidateRole Successful Response
 * @throws ApiError
 */
export const listCandidatesCompaniesCompanyIdRolesRoleIdCandidatesGet = (data: ListCandidatesCompaniesCompanyIdRolesRoleIdCandidatesGetData): CancelablePromise<ListCandidatesCompaniesCompanyIdRolesRoleIdCandidatesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies/{company_id}/roles/{role_id}/candidates',
    path: {
        company_id: data.companyId,
        role_id: data.roleId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Update Candidate
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.candidateId
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const updateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPut = (data: UpdateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutData): CancelablePromise<UpdateCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/companies/{company_id}/roles/{role_id}/candidates/{candidate_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId,
        candidate_id: data.candidateId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get Candidate
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.candidateId
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGet = (data: GetCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetData): CancelablePromise<GetCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/companies/{company_id}/roles/{role_id}/candidates/{candidate_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId,
        candidate_id: data.candidateId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Candidate
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.candidateId
 * @returns CandidateRole Successful Response
 * @throws ApiError
 */
export const deleteCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDelete = (data: DeleteCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteData): CancelablePromise<DeleteCandidateCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/companies/{company_id}/roles/{role_id}/candidates/{candidate_id}',
    path: {
        company_id: data.companyId,
        role_id: data.roleId,
        candidate_id: data.candidateId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Generate Candidate Role Description
 * @param data The data for the request.
 * @param data.companyId
 * @param data.roleId
 * @param data.candidateId
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const generateCandidateRoleDescriptionCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPost = (data: GenerateCandidateRoleDescriptionCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostData): CancelablePromise<GenerateCandidateRoleDescriptionCompaniesCompanyIdRolesRoleIdCandidatesCandidateIdGenerateDescriptionPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/companies/{company_id}/roles/{role_id}/candidates/{candidate_id}/generate_description',
    path: {
        company_id: data.companyId,
        role_id: data.roleId,
        candidate_id: data.candidateId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * List Candidates
 * @returns CandidateWithId Successful Response
 * @throws ApiError
 */
export const listCandidatesCandidatesGet = (): CancelablePromise<ListCandidatesCandidatesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/candidates'
}); };

/**
 * Create Candidate
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const createCandidateCandidatesPost = (data: CreateCandidateCandidatesPostData): CancelablePromise<CreateCandidateCandidatesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/candidates',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get Candidate
 * @param data The data for the request.
 * @param data.candidateId
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getCandidateCandidatesCandidateIdGet = (data: GetCandidateCandidatesCandidateIdGetData): CancelablePromise<GetCandidateCandidatesCandidateIdGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/candidates/{candidate_id}',
    path: {
        candidate_id: data.candidateId
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Update Candidate
 * @param data The data for the request.
 * @param data.candidateId
 * @param data.requestBody
 * @returns Candidate Successful Response
 * @throws ApiError
 */
export const updateCandidateCandidatesCandidateIdPut = (data: UpdateCandidateCandidatesCandidateIdPutData): CancelablePromise<UpdateCandidateCandidatesCandidateIdPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/candidates/{candidate_id}',
    path: {
        candidate_id: data.candidateId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Candidate
 * @param data The data for the request.
 * @param data.candidateId
 * @returns Candidate Successful Response
 * @throws ApiError
 */
export const deleteCandidateCandidatesCandidateIdDelete = (data: DeleteCandidateCandidatesCandidateIdDeleteData): CancelablePromise<DeleteCandidateCandidatesCandidateIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/candidates/{candidate_id}',
    path: {
        candidate_id: data.candidateId
    },
    errors: {
        422: 'Validation Error'
    }
}); };